{"version":3,"sources":["assets/autobot-logo.svg","assets/instagram-logo.svg","assets/search.svg","assets/heart.svg","assets/compass.svg","assets/profileIcon.svg","components/header/header.js","components/profilePicture/profilePicture.js","components/infoBlock/infoBlock.js","components/modal/modal.js","components/allPhotos/allPhotos.js","components/spinner/spinner.js","components/photoBlock/photoBlock.js","hooks/hooks.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","instagramLogo","alt","searchIcon","placeholder","compass","heart","profileIcon","ProfilePicture","autobotLogo","InfoBlock","user","map","skill","key","Modal","picture","closeModal","urls","small","hashtag","index","string","showHashtags","onClick","AllPhotos","data","handleClick","photo","to","id","Spinner","PhotoBlock","url","useState","setData","loading","setLoading","useEffect","a","fetch","response","json","results","fetchUrl","useFetch","openPhoto","setOpenPhoto","modalVisible","setModalVisible","pic","Footer","style","width","fontSize","marginTop","margin","position","bottom","marginBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c67c7cfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/autobot-logo.b14011e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram-logo.906321b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.dd9b4cef.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.7746f5e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/compass.7dbaa9f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.693576e2.svg\";","import React from 'react';\r\n\r\nimport './header.css';\r\nimport instagramLogo from '../../assets/instagram-logo.svg';\r\nimport searchIcon from '../../assets/search.svg';\r\nimport heart from '../../assets/heart.svg';\r\nimport compass from '../../assets/compass.svg';\r\nimport profileIcon from '../../assets/profileIcon.svg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='headerContainer'>\r\n            <header>\r\n                <div className='logoContainer' >\r\n                    <img src={instagramLogo} alt='logo' />\r\n                </div>\r\n                <div className='inputContainer'>\r\n                    <img src={searchIcon} alt='searchIcon' />\r\n                    <input placeholder='Search'></input>\r\n                </div>\r\n                <div className='iconsContainer' >\r\n                    <img src={compass} alt='compass' className='compassIcon' />\r\n                    <img src={heart} alt='heart' className='heartIcon' />\r\n                    <img src={profileIcon} alt='profileIcon' className='profileIcon' />\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport './profilePicture.css';\r\nimport autobotLogo from '../../assets/autobot-logo.svg';\r\n\r\nconst ProfilePicture = () => {\r\n    return (\r\n        <div className='pictureContainer' >\r\n\r\n            <img src='https://instagram.fkiv4-1.fna.fbcdn.net/v/t51.2885-19/s320x320/22638771_138322276895570_2661938283868585984_n.jpg?_nc_ht=instagram.fkiv4-1.fna.fbcdn.net&_nc_ohc=n8JMiK8aTqsAX8SitLr&oh=a03f18f4b45b11734f2f95d1fd9fde6c&oe=5F0B1B59' alt='avatar' className=\"profilePicture\" />\r\n            <img src={autobotLogo} alt='autobotLogo' className=\"autobotLogo\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './infoBlock.css';\r\nimport ProfilePicture from '../profilePicture/profilePicture'\r\n\r\nconst InfoBlock = ({ user }) => {\r\n    const profileName = 'EBS Integrator Transformer version';\r\n    const profileSkillSet = [\r\n        'MVP Autobot Builds',\r\n        'Feature Robotic Production',\r\n        'Decepticons Refactoring',\r\n        'Human protection'\r\n    ];\r\n\r\n    const posts = 48;\r\n    const followers = 113;\r\n    const following = 130;\r\n\r\n    return (\r\n        <div className='infoBlockContainer'>\r\n            <div className='leftBlock'>\r\n                <ProfilePicture />\r\n            </div>\r\n            <div className='rightBlock'>\r\n                <div className='statBlock' >\r\n                    <h2>\r\n                        {user}\r\n                    </h2>\r\n                    <ul className='statistics'>\r\n                        <li><b>{posts}</b> posts\r\n                </li>\r\n                        <li><b>{followers}</b> followers\r\n                </li>\r\n                        <li><b>{following}</b> following\r\n                </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className='skillBlock'>\r\n                    <h3>{profileName}\r\n                    </h3>\r\n                    <ul> {profileSkillSet.map(skill => (<li key={skill}>{skill}</li>))} </ul>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nInfoBlock.propTypes = {\r\n    user: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default InfoBlock\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './modal.css';\r\nimport ProfilePicture from '../profilePicture/profilePicture'\r\n\r\nconst Modal = ({ picture, user, closeModal }) => {\r\n    const hashtags = [\r\n        'Eugene',\r\n        'Ostapenco',\r\n        'How are you',\r\n        'guys doing?',\r\n        'May I join',\r\n        'your team?'\r\n    ]\r\n\r\n    const doingWhat = 'Following'\r\n    const greetings = 'Greetings from';\r\n    const showHashtags = (string, index) => {\r\n        return <span className='hashtag' key={index}>#{string} </span>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modalContainer\">\r\n\r\n                <img src={picture.urls.small} alt='modalPic' className='modalContainerMainImage'></img>\r\n                <div className='modalInfo'>\r\n                    <div className='modalInfoHeader'>\r\n                        <ProfilePicture />\r\n                        <b> <span>{user}</span>\r\n                            <span> {doingWhat} </span></b>\r\n                    </div>\r\n                    <div className='modalInfoMain'>\r\n                        <b>{user}</b> {greetings} {hashtags.map((hashtag, index) => showHashtags(hashtag, index))}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"bg\" onClick={closeModal} />\r\n        </div>\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n    picture: PropTypes.object.isRequired,\r\n    user: PropTypes.string.isRequired,\r\n    closeModal: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport './allPhotos.css';\r\n\r\nconst AllPhotos = ({ data, handleClick }) => {\r\n    return (\r\n        <Router>\r\n            <ul className='allImages'>\r\n                {data.map((photo) => (\r\n                    <Link to={photo.id}>\r\n                        <div key={photo.id} className='imageContainer' >\r\n                            <img src={photo.urls.small} alt='roboPic' onClick={() => handleClick(photo)} >\r\n                            </img>\r\n                        </div>\r\n                    </Link>\r\n                ))\r\n                }\r\n            </ul >\r\n        </Router>\r\n    );\r\n}\r\n\r\nAllPhotos.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    handleClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AllPhotos\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => (\r\n    <div className='container'>\r\n        <div className='spinner' />\r\n    </div>\r\n);\r\n\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { useFetch } from \"../../hooks/hooks\";\r\nimport './photoBlock.css';\r\nimport Modal from '../modal/modal';\r\nimport AllPhotos from '../allPhotos/allPhotos';\r\nimport Spinner from '../spinner/spinner';\r\n\r\n\r\nconst PhotoBlock = ({ user }) => {\r\n\r\n    const client_id = \"9y2K6JuE31mf03xrY1tJpB1kDR0T2Tit28UD9cqUjjg\"\r\n    const query = 'transformer';\r\n    const url = `https://api.unsplash.com/search/photos?client_id=${client_id}&query=${query}`;\r\n\r\n    const [data, loading] = useFetch(url);\r\n    const [openPhoto, setOpenPhoto] = useState();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const handleClick = (pic) => {\r\n        setModalVisible(true);\r\n        setOpenPhoto(pic);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? (\r\n                    <Spinner />\r\n                ) : (\r\n                        modalVisible ? (<>\r\n                            <Modal picture={openPhoto} user={user} closeModal={closeModal} />\r\n                            <AllPhotos data={data} handleClick={handleClick} />\r\n                        </>) : (\r\n                                <AllPhotos data={data} handleClick={handleClick} />\r\n                            ))\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nPhotoBlock.propTypes = {\r\n    user: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PhotoBlock\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchUrl() {\r\n            const response = await fetch(url);\r\n            const json = await response.json();\r\n            setData(json.results);\r\n            setLoading(false);\r\n        }\r\n\r\n        fetchUrl();\r\n    });\r\n    return [data, loading];\r\n}\r\nexport { useFetch };","import React from 'react';\r\n\r\nimport './footer.css';\r\nimport autobotLogo from '../../assets/autobot-logo.svg';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footerContainer'>\r\n            <footer>\r\n                <div className='outerContainer'>\r\n                    <div className='innerContainer'>\r\n                        <div>\r\n                            <img src={autobotLogo} alt='logo' />\r\n                            <p style={{ width: '250px', fontSize: '16px', marginTop: '12px' }}>\r\n                                Autobots is explained to be the short version of the title Autonomous Robotic Organisms.\r\n              </p>\r\n                        </div>\r\n                        <div>\r\n                            <h3>Menu</h3>\r\n                            <ul style={{ margin: '20px' }} >\r\n                                <li>\r\n                                    Optimus Prime\r\n                                </li>\r\n                                <li>\r\n                                    Bumblebee\r\n                               </li>\r\n                                <li>\r\n                                    Ratchet\r\n                               </li>\r\n                                <li>\r\n                                    Ironhide\r\n                                </li>\r\n                                <li>\r\n                                    Jazz\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <h3>Contacts</h3>\r\n                            <ul style={{ margin: '20px' }}>\r\n                                <li>+373 69 417014</li>\r\n                                <li>evgheniostapenco@gmail.com</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ position: 'absolute', bottom: '0' }}>\r\n                        <p style={{ fontSize: '12px', marginBottom: '5px' }}>\r\n                            Copyright © 2020 Eugene Ostapenco. All rights reserved.\r\n            </p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\n\nimport './App.css';\nimport Header from './components/header/header';\nimport InfoBlock from './components/infoBlock/infoBlock';\nimport PhotoBlock from './components/photoBlock/photoBlock';\nimport Footer from './components/footer/footer';\n\n\nconst App = () => {\n\n  const user = 'ebsintegrator';\n\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <div className=\"bodyContainer\">\n        <InfoBlock user={user} />\n        <PhotoBlock user={user} />\n      </div>\n      <Footer />\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}